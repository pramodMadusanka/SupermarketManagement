@* @page "/addproduct" *@
@inject UseCases.DataStorePluginInterfaces.ICategoryRepository CategoryRepository
@inject UseCases.UseCasesInterfaces.ICreateProductUseCase CreateProductUseCase
@inject NavigationManager NavigationManager

<div class="container">
    <h3 class="text-primary">Add Product</h3>
    <EditForm Model="_product" OnValidSubmit="OnValidSubmit" class="form-inline">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <label for="categoryid">Category ID</label>
        <InputSelect id=categoryid @bind-Value="_product.CategoryId" class="form-control">
            @foreach (var category in _categories)
            {
                <option value="@category.CategoryId">@category.CategoryId - @category.Name</option>
            }
        </InputSelect>
        @* <InputNumber id="categoryid" @bind-Value="_product.CategoryId" class="form-control"></InputNumber> *@
        <label for="name" class="pt-3">Product Name</label>
        <InputText id="name" @bind-Value="_product.Name" class="form-control"></InputText>
        <label for="quantity" class="pt-3">Quantity</label>
        <InputNumber id="quantity" @bind-Value="_product.Quantity" class="form-control"></InputNumber>
        <label for="price" class="pt-3">Price</label>
        <InputNumber id="price" @bind-Value="_product.Price" class="form-control"></InputNumber>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
    </EditForm>
</div>

@code
{
    private Product _product;
    private IEnumerable<Category> _categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _product = new Product();
        _categories = CategoryRepository.GetCategories();
    }
    private void OnValidSubmit()
    {
        CreateProductUseCase.Execute(_product);
        NavigationManager.NavigateTo("/products");
    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}