@page "/categories"
@inject UseCases.UseCasesInterfaces.IViewCategoriesUseCase ViewCategoriesUseCase
@inject NavigationManager NavigationManager

<dev class="container">
    <dev class="row pb-2">
        <dev class="col-6">
            <h3 class="text-primary">Manage Categories</h3>
        </dev>
        <dev class="col-6 d-flex align-items-center justify-content-end">
            @* d-flex justify-content-end *@
            <button class="btn btn-primary" type="button" @onclick="AddCategory">
                Add Category
            </button>
        </dev>
    </dev>
    @if(categories != null)
    {
        <table class="table table-striped table-bordered" style="width: 100%;">
            <thead>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th></th>
            </thead>
            <tbody>
                @foreach (var category in categories)
                {
                    <tr>
                        <td>@category.CategoryId</td>
                        <td>@category.Name</td>
                        <td>@category.Description</td>
                        <td>
                            <div class="btn-group">
                                <button type="button" class="btn btn-primary" @onclick="()=>EditCategory(category)">Edit</button>
                                <button type="button" class="btn btn-danger" @onclick="()=>DeleteCategory(category)">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</dev>


@code
{
    private IEnumerable<Category> categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute();
    }
    private void AddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }
    private void EditCategory(Category item)
    {
        NavigationManager.NavigateTo($"/editcategory/{item.CategoryId}");
    }
    private void DeleteCategory(Category item)
    {
        NavigationManager.NavigateTo($"/deletecategory/{item.CategoryId}");
    }
}